{{- range $dbIndex, $database := .Values.databases }}
{{- if $database.periodicity }}
{{- range $periodIndex, $period := $database.periodicity }}
{{- if $period.schedule }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "dumpscript.fullname" $ }}-db-{{ $dbIndex }}-{{ $period.type }}
  labels:
    {{- include "dumpscript.labels" $ | nindent 4 }}
    app.kubernetes.io/component: cronjob
    dumpscript/database-index: "{{ $dbIndex }}"
    dumpscript/database-type: "{{ $database.type }}"
    dumpscript/periodicity-type: "{{ $period.type }}"
    {{- if $database.version }}
    dumpscript/database-version: "{{ $database.version }}"
    {{- end }}
spec:
  schedule: {{ $period.schedule | quote }}
  successfulJobsHistoryLimit: {{ $database.successHistoryLimit }}
  failedJobsHistoryLimit: {{ $database.failureHistoryLimit }}
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          {{- with $.Values.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          labels:
            {{- include "dumpscript.labels" $ | nindent 12 }}
            app.kubernetes.io/component: cronjob
            dumpscript/database-index: "{{ $dbIndex }}"
            dumpscript/database-type: "{{ $database.type }}"
            dumpscript/periodicity-type: "{{ $period.type }}"
            {{- if $database.version }}
            dumpscript/database-version: "{{ $database.version }}"
            {{- end }}
            {{- with $.Values.podLabels }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        spec:
          {{- with $.Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "dumpscript.serviceAccountName" $ }}
          securityContext:
            {{- toYaml $.Values.podSecurityContext | nindent 12 }}
          restartPolicy: Never
          containers:
          - name: {{ $.Chart.Name }}
            securityContext:
              {{- toYaml $.Values.securityContext | nindent 14 }}
            image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
            imagePullPolicy: {{ $.Values.image.pullPolicy }}
            env:
            - name: DB_TYPE
              value: {{ $database.type | quote }}
            {{- if $database.version }}
            {{- if eq $database.type "postgresql" }}
            - name: POSTGRES_VERSION
              value: {{ $database.version | quote }}
            {{- else if eq $database.type "mysql" }}
            - name: MYSQL_VERSION
              value: {{ $database.version | quote }}
            {{- end }}
            {{- end }}
            {{- if $database.connectionInfo.secretName }}
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ $database.connectionInfo.secretName }}
                  key: host
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ $database.connectionInfo.secretName }}
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $database.connectionInfo.secretName }}
                  key: password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ $database.connectionInfo.secretName }}
                  key: database
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ $database.connectionInfo.secretName }}
                  key: port
            {{- else }}
            - name: DB_HOST
              value: {{ $database.connectionInfo.host | quote }}
            - name: DB_USER
              value: {{ $database.connectionInfo.username | quote }}
            - name: DB_PASSWORD
              value: {{ $database.connectionInfo.password | quote }}
            - name: DB_NAME
              value: {{ $database.connectionInfo.database | quote }}
            - name: DB_PORT
              value: {{ $database.connectionInfo.port | quote }}
            {{- end }}
            {{- if $database.aws.secretName }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ $database.aws.secretName }}
                  key: accessKeyId
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ $database.aws.secretName }}
                  key: secretAccessKey
            {{- end }}
            - name: AWS_REGION
              value: {{ $database.aws.region | quote }}
            - name: S3_BUCKET
              value: {{ $database.aws.bucket | quote }}
            - name: S3_PREFIX
              value: {{ $database.aws.bucketPrefix | quote }}
            - name: PERIODICITY
              value: {{ $period.type | quote }}
            {{- if $period.retentionDays }}
            - name: RETENTION_DAYS
              value: {{ $period.retentionDays | quote }}
            {{- end }}
            {{- if $database.extraArgs }}
            - name: DUMP_OPTIONS
              value: {{ $database.extraArgs | quote }}
            {{- end }}
            {{- if $.Values.notifications.slack.enabled }}
            {{- if $.Values.notifications.slack.webhookUrlFromSecret }}
            - name: SLACK_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.notifications.slack.webhookUrlFromSecret.name }}
                  key: {{ $.Values.notifications.slack.webhookUrlFromSecret.key }}
            {{- else if $.Values.notifications.slack.webhookUrl }}
            - name: SLACK_WEBHOOK_URL
              value: {{ $.Values.notifications.slack.webhookUrl | quote }}
            {{- end }}
            - name: SLACK_CHANNEL
              value: {{ $.Values.notifications.slack.channel | quote }}
            - name: SLACK_USERNAME
              value: {{ $.Values.notifications.slack.username | quote }}
            - name: SLACK_NOTIFY_SUCCESS
              value: {{ $.Values.notifications.slack.notifyOnSuccess | quote }}
            {{- end }}
            resources:
              {{- toYaml $.Values.resources | nindent 14 }}
            {{- with $database.extraVolumeMounts }}
            volumeMounts:
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with $database.extraVolumes }}
          volumes:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with $.Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $.Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $.Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }} 